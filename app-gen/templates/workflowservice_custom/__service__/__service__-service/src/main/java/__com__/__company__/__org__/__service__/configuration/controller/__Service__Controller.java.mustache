package {{com}}.{{company}}.{{org}}.{{service}}.configuration.controller;

import java.util.Map;

import jakarta.servlet.http.HttpServletRequest;

import {{chenilePackage}}.base.response.GenericResponse;
import {{chenilePackage}}.http.annotation.BodyTypeSelector;
import {{chenilePackage}}.http.annotation.ChenileController;
import {{chenilePackage}}.http.annotation.ChenileParamType;
import {{chenilePackage}}.http.handler.ControllerSupport;
import org.springframework.http.ResponseEntity;

import {{chenilePackage}}.stm.StateEntity;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import {{chenilePackage}}.workflow.dto.StateEntityServiceResponse;
import {{com}}.{{company}}.{{org}}.{{service}}.model.{{Service}};
{{#security}}
import {{chenilePackage}}.security.model.SecurityConfig;
{{/security}}

@RestController
@ChenileController(value = "{{service}}Service", serviceName = "_{{service}}StateEntityService_",
		healthCheckerName = "{{service}}HealthChecker")
public class {{Service}}Controller extends ControllerSupport{
	
	@GetMapping("/{{service}}/{id}")
{{#security}}
    @SecurityConfig(authorities = {"some_premium_scope","test.premium"})
{{/security}}
	public ResponseEntity<GenericResponse<StateEntityServiceResponse<{{Service}}>>> retrieve(
			HttpServletRequest httpServletRequest,
			@PathVariable String id){
		return process(httpServletRequest,id);
	}

	@PostMapping("/{{service}}")
{{#security}}
    @SecurityConfig(authorities = {"some_premium_scope","test.premium"})
{{/security}}
	public ResponseEntity<GenericResponse<StateEntityServiceResponse<{{Service}}>>> create(
			HttpServletRequest httpServletRequest,
			@ChenileParamType(StateEntity.class)
			@RequestBody {{Service}} entity){
		return process(httpServletRequest,entity);
	}

	
	@PatchMapping("/{{service}}/{id}/{eventID}")
	@BodyTypeSelector("{{service}}BodyTypeSelector")
{{#security}}
    @SecurityConfig(authoritiesSupplier = "{{service}}EventAuthoritiesSupplier")
{{/security}}
	public ResponseEntity<GenericResponse<StateEntityServiceResponse<{{Service}}>>> processById(
			HttpServletRequest httpServletRequest,
			@PathVariable String id,
			@PathVariable String eventID,
			@ChenileParamType(Object.class) 
			@RequestBody String eventPayload){
		return process(httpServletRequest,id,eventID,eventPayload);
	}


}
