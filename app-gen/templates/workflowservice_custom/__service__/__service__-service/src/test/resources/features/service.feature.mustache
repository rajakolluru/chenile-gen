Feature: Tests the {{service}} Workflow Service using a REST client. {{Service}} service exists and is under test.
It helps to create a {{service}} and manages the state of the {{service}} as documented in states xml

{{#testcases}}
Scenario: Create a new {{service}}
{{#steps}}
    {{#first}}
    Given that "flowName" equals "{{fromFlow}}"
    And that "initialState" equals "{{from}}"
    {{/first}}
{{/steps}}
{{#security}}
    When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
    And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
{{/security}}
    When I POST a REST request to URL "/{{service}}" with payload
    """json
    {
	    "description": "Description"
	}
	"""
    Then the REST response contains key "mutatedEntity"
    And store "$.payload.mutatedEntity.id" from response to "id"
    And the REST response key "mutatedEntity.currentState.stateId" is "${initialState}"
    And store "$.payload.mutatedEntity.currentState.stateId" from response to "currentState"
    And the REST response key "mutatedEntity.description" is "Description"
	  
	Scenario: Retrieve the {{service}} that just got created
{{#security}}
    When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
    And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
{{/security}}
      When I GET a REST request to URL "/{{service}}/${id}"
      Then the REST response contains key "mutatedEntity"
      And the REST response key "mutatedEntity.id" is "${id}"
      And the REST response key "mutatedEntity.currentState.stateId" is "${currentState}"

{{#steps}}
	 Scenario: Send the {{event}} event to the {{service}} with comments
     Given that "comment" equals "Comment for {{event}}"
     And that "event" equals "{{event}}"
{{#security}}
    When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
    And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
{{/security}}
		When I PATCH a REST request to URL "/{{service}}/${id}/${event}" with payload
		"""json
		{
			"comment": "${comment}"
		}
		"""
	  Then the REST response contains key "mutatedEntity"
	  And the REST response key "mutatedEntity.id" is "${id}"
	  And the REST response key "mutatedEntity.currentState.stateId" is "{{to}}"
     And store "$.payload.mutatedEntity.currentState.stateId" from response to "finalState"

{{/steps}}
{{/testcases}}

{{#activity}}
Scenario: Add new mandatory activities a1,a2 for the last state.
    Add a new state "__TERMINAL_STATE__"
    Add a completion checker activity "cc" to the last state that leads to __TERMINAL_STATE__
    Send cc event on the {{service}} with comments. This should fail since the mandatory activities
    have not been completed.
    Given that "terminalState" equals "__TERMINAL_STATE__"
    And that config strategy is "{{service}}ConfigProvider" with prefix "{{Service}}"
    And that a new mandatory activity "a1" is added from state "${finalState}" to state "${finalState}" in flow "${flowName}"
    And that a new mandatory activity "a2" is added from state "${finalState}" to state "${finalState}" in flow "${flowName}"
    And that a new state "${terminalState}" is added to flow "${flowName}"
    And that a new activity completion checker "cc" is added from state "${finalState}" to state "${terminalState}" in flow "${flowName}"
    And that "comment" equals "Attempting to send cc event without mandatory activities being completed."
    And that "event" equals "cc"
    When I PATCH a REST request to URL "/{{service}}/${id}/${event}" with payload
    """json
        {
        "comment": "${comment}"
        }
    """
    Then the REST response does not contain key "mutatedEntity"
    And success is false
    And the http status code is 400
    And the top level subErrorCode is 49000

Scenario: Retrieve the {{service}} that just got created
{{#security}}
    When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
    And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
{{/security}}
When I GET a REST request to URL "/{{service}}/${id}"
Then the REST response contains key "mutatedEntity"
And the REST response key "mutatedEntity.id" is "${id}"
And the REST response key "mutatedEntity.currentState.stateId" is "${finalState}"

Scenario: Perform mandatory activity (a1) on the  {{service}} with comments
    Given that "comment" equals "Performed activity a1."
    And that "event" equals "a1"
    {{#security}}
        When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
        And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
    {{/security}}
    When I PATCH a REST request to URL "/{{service}}/${id}/${event}" with payload
    """json
    {
    "comment": "${comment}"
    }
    """
    Then the REST response contains key "mutatedEntity"
    And the REST response key "mutatedEntity.id" is "${id}"
    And the REST response key "mutatedEntity.currentState.stateId" is "${finalState}"
    And the REST response key "mutatedEntity.activities" collection has an item with keys and values:
    | key             | value         |
    | activityName    | ${event}      |
    | activityComment | ${comment}    |

Scenario: Perform mandatory activity (a2) on the  {{service}} with comments
    Given that "comment" equals "Performed activity a2."
    And that "event" equals "a2"
    {{#security}}
        When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
        And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
    {{/security}}
    When I PATCH a REST request to URL "/{{service}}/${id}/${event}" with payload
    """json
    {
    "comment": "${comment}"
    }
    """
    Then the REST response contains key "mutatedEntity"
    And the REST response key "mutatedEntity.id" is "${id}"
    And the REST response key "mutatedEntity.currentState.stateId" is "${finalState}"
    And the REST response key "mutatedEntity.activities" collection has an item with keys and values:
    | key             | value         |
    | activityName    | ${event}      |
    | activityComment | ${comment}    |

Scenario: Perform mandatory activity (cc) on the  {{service}} with comments
    Given that "comment" equals "Performed activity cc after completing all activities."
    And that "event" equals "cc"
    {{#security}}
        When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
        And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
    {{/security}}
    When I PATCH a REST request to URL "/{{service}}/${id}/${event}" with payload
    """json
    {
    "comment": "${comment}"
    }
    """
    Then the REST response contains key "mutatedEntity"
    And the REST response key "mutatedEntity.id" is "${id}"
    And the REST response key "mutatedEntity.currentState.stateId" is "${terminalState}"
{{/activity}}

Scenario: Send an invalid event to {{service}} . This will err out.
{{#security}}
    When I construct a REST request with authorization header in realm "tenant0" for user "t0-premium" and password "t0-premium"
    And I construct a REST request with header "x-chenile-tenant-id" and value "tenant0"
{{/security}}
		When I PATCH a REST request to URL "/{{service}}/${id}/invalid" with payload
		"""json
		{
			"comment": "invalid stuff"
		}
		"""
		Then the REST response does not contain key "mutatedEntity"
		And the http status code is 422

	  