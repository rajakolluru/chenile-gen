{{#workflow}}
    {{#flows}}
        {{#events}}

--START--{{#capitalize}}{{eventId}}{{/capitalize}}{{Service}}Action.java
package {{com}}.{{company}}.{{org}}.{{service}}.service.cmds;

import {{chenilePackage}}.stm.STMInternalTransitionInvoker;
import {{chenilePackage}}.stm.State;
import {{chenilePackage}}.stm.model.Transition;

import {{chenilePackage}}.workflow.service.stmcmds.AbstractSTMTransitionAction;
import {{com}}.{{company}}.{{org}}.{{service}}.model.{{Service}};
{{#genCustomizedPayload}}
    {{#isManualTransition}}
import {{com}}.{{company}}.{{org}}.{{service}}.dto.{{#capitalize}}{{eventId}}{{/capitalize}}{{Service}}Payload;
    {{/isManualTransition}}
    {{^isManualTransition}}
import {{chenilePackage}}.workflow.param.MinimalPayload;
    {{/isManualTransition}}
{{/genCustomizedPayload}}
{{^genCustomizedPayload}}
import {{chenilePackage}}.workflow.param.MinimalPayload;
{{/genCustomizedPayload}}

/**
 Contains customized logic for the transition. Common logic resides at {@link DefaultSTMTransitionAction}
 <p>Use this class if you want to augment the common logic for this specific transition</p>
 <p>Use a customized payload if required instead of MinimalPayload</p>
*/
public class {{#capitalize}}{{eventId}}{{/capitalize}}{{Service}}Action extends AbstractSTMTransitionAction<{{Service}},

{{#genCustomizedPayload}}
{{#isManualTransition}}
    {{#capitalize}}{{eventId}}{{/capitalize}}{{Service}}Payload>{
{{/isManualTransition}}
{{^isManualTransition}}
    MinimalPayload>{
{{/isManualTransition}}
{{/genCustomizedPayload}}

{{^genCustomizedPayload}}
    MinimalPayload>{
{{/genCustomizedPayload}}

	@Override
	public void transitionTo({{Service}} {{service}},
{{#genCustomizedPayload}}
    {{#isManualTransition}}
            {{#capitalize}}{{eventId}}{{/capitalize}}{{Service}}Payload payload,
    {{/isManualTransition}}
    {{^isManualTransition}}
            MinimalPayload payload,
    {{/isManualTransition}}
{{/genCustomizedPayload}}
{{^genCustomizedPayload}}
            MinimalPayload payload,
{{/genCustomizedPayload}}
            State startState, String eventId,
			State endState, STMInternalTransitionInvoker<?> stm, Transition transition) throws Exception {
{{#genDefaultPostSaveHook}}
            {{service}}.transientMap.previousPayload = payload;
{{/genDefaultPostSaveHook}}
	}

}
--END--
        {{/events}}
    {{/flows}}
{{/workflow}}